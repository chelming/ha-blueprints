blueprint:
  name: MuteDeck webhook handler
  description: 'Home Assistant blueprint for handling MuteDeck webhooks.


    In MuteDeck app, click the settings icon, select the Notifications tab, turn on Enable Webhook and set the URL to:

    https://<home-assistant-host>/api/webhook/<webhook-id>


    MuteDeck events: https://mutedeck.com/help/api/

 
    Note that all events will be sent any time one of them changes. If you take yourself off mute, the events for meeting, video, record, and sharing status will all be sent and processed.
    '
  source_url: https://github.com/chelming/ha-blueprints/blob/main/blueprints/MuteDeck/MuteDeck.yaml
  domain: automation
  input:
    webhook:
      name: Webhook ID
      description: If you disable Local Only, choose something hard to guess. Security by obscurity!
    localonly:
      name: Local Only
      description: Makes this only accessible from the local network
      default: true
      selector:
        boolean: {}
    meeting_started:
      name: Meeting started
      description: Action to run when a meeting starts.
      default: false
      selector:
        action: {}
    meeting_ended:
      name: Meeting ended
      description: Action to run when a meeting ends.
      default: []
      selector:
        action: {}
    unmuted:
      name: Unmuted
      description: Action to run when you unmute your mic.
      default: []
      selector:
        action: {}
    muted:
      name: Muted
      description: Action to run when you mute your mic.
      default: []
      selector:
        action: {}
    video_on:
      name: Video on
      description: Action to run when your video is on.
      default: []
      selector:
        action: {}
    video_off:
      name: Video off
      description: Action to run when your video is off.
      default: []
      selector:
        action: {}
    screen_sharing_on:
      name: Screen sharing on
      description: Action to run when you're screen sharing.
      default: []
      selector:
        action: {}
    screen_sharing_off:
      name: Screen sharing off
      description: Action to run when you're not screen sharing.
      default: []
      selector:
        action: {}
    recording_on:
      name: Recording on
      description: Action to run when the meeting is being recorded.
      default: []
      selector:
        action: {}
    recording_off:
      name: Recording off
      description: Action to run when the meeting is not being recorded.
      default: []
      selector:
        action: {}
mode: parallel
trigger:
- platform: webhook
  webhook_id: !input webhook
  allowed_methods:
  - POST
  local_only: !input localonly
action:
- if:
  - alias: Meeting started
    conditions: '{{ trigger.json.call  == ''active'' }}'
    then: !input meeting_started
  - alias: Meeting ended
    conditions: '{{ trigger.json.call  != ''active'' }}'
    then: !input meeting_ended
  - alias: Unmuted
    conditions: '{{ trigger.json.mute  != ''active'' }}'
    then: !input unmuted
  - alias: Muted
    conditions: '{{ trigger.json.mute  == ''active'' }}'
    then: !input muted
  - alias: Video on
    conditions: '{{ trigger.json.video  == ''active'' }}'
    then: !input video_on
  - alias: Video on
    conditions: '{{ trigger.json.video  != ''active'' }}'
    then: !input video_off
  - alias: Screen sharing on
    conditions: '{{ trigger.json.share  == ''active'' }}'
    then: !input screen_sharing_on
  - alias: Screen sharing off
    conditions: '{{ trigger.json.share  != ''active'' }}'
    then: !input screen_sharing_off
  - alias: Recording on
    conditions: '{{ trigger.json.share  == ''active'' }}'
    then: !input recording_on
  - alias: Recording off
    conditions: '{{ trigger.json.share  != ''active'' }}'
    then: !input recording_off
